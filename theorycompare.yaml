# default_config.yaml file: When configure_cglass is run, this file is read to generate 
# system_parameters structure as well as code for parsing parameters in parameter yaml file.

seed : 7859459105545         # Seed for random number generator, sets initial conditions.
n_runs: 1                     # Number of simulations to perform using identical parameters
                                     # with unique initial conditions (new seed).
n_random: 1                   # Number of samples when using randomly-sampled parameters.
run_name: th               # Prefix used to label output files.
n_dim : 2                     # Dimensionality of system. 2 or 3.
n_periodic : 0                # Number of periodic dimensions. Should be <= n_dim.
boundary : 2                # 0: No boundary condition constraints.
                                     # 1: Box-like boundary condition.
                                     # 2: Spherical BC with radius of system_radius.
                                     # 3: Budding-yeast BC with mother and daughter cell.
system_radius : 40       # Sets system volume. 1D system length is 2 x system_radius.
n_steps : 1000000             # Number of steps to run simulation before completion.
i_step: 0                     # Internal parameter used for tracking simulation iteration.
on_midstep: false               # Internal parameter, whether current step is midstep.
prev_step: 0                  # Internal parameter, previous simulation iteration.
delta : 0.0001              # Simulation time duration between each simulation step.
dynamic_timestep : false     # Change timestep if necessary to avoid unphysical forces
dynamic_timestep_ramp : 0.001  # How quickly to return to default timestep
graph_flag : true           # Whether to run simulation with live graphics.
n_graph : 1000                # Number of simulation steps between refreshing graphics.
graph_diameter : 0         # If > 0, draws particles with a diameter of graph_diameter.
invert_background : false    # If false, black background, otherwise white background.
draw_boundary: true          # If set to zero, does not draw system boundary conditions.
load_checkpoint: false       # Flag for reading checkpoint file corresponding to
                                     # input parameter file. Equiv to "cglass -l params.yaml"
checkpoint_run_name: sc    # Internal parameter for tracking checkpoint file run name.
n_load: 0                     # Internal parameter for keeping track of reload numbers
movie_flag : false           # Generate bitmaps of graphics window to movie_directory
movie_directory : frames   # Directory to output graphics bitmaps
time_analysis : false        # Generate output file with simulation runtime data
bud_height : 50           # center separation of mother and daughter cells
bud_radius : 20           # radius of daughter cell
lj_epsilon: 1              # Energy scaling factor for Lennard-Jones potential
wca_eps: 1                 # Energy scaling factor for WCA potential
wca_sig: 1                 # Distance scaling factor for WCA potential
ss_a: 1                    # Soft shoulder potential parameter.
ss_rs: 1.5                 # Soft shoulder potential distance scaling parameter.
ss_eps: 1                  # Soft shoulder potential energy scaling parameter.
f_cutoff: 2000             # Maximum force generated by interaction potentials
constant_pressure: false     # Flag to maintain constant pressure: system volume may vary.
constant_volume: false       # Flag to adiabatically resize system volume to target volume.
target_pressure: 0         # Target pressure for constant pressure.
target_radius: 100         # Target volume for constant volume.
pressure_time: 100            # No. steps to reach target pressure in constant pressure sim.
compressibility: 1         # Scaling param for unit cell updates for constant pressure.
zero_temperature: true      # Flag for toggling Brownian motion in various species.
thermo_flag: false           # Output stress tensor and pressure/volume information every
                                     # n_thermo steps.
n_thermo: 1000                # How often to output thermo info.
insert_radius: -1          # Insert species into subvolume with radius insert_radius
interaction_flag: true       # If zero, skips checking for particle interactions.
remove_duplicate_interactions: false  # Don't allow more than one interaction from a
                                             # given mesh_id per object
coarse_grained_mesh_interactions: false  # Only allow every N bonds in a mesh to trigger
                                                 # an interaction, with N corresponding to
                                                 # mesh_coarsening parameter (head and tail will
                                                 # always trigger interactions)
mesh_coarsening: 2  #  Coarsening parameter to use for coarse_grained_mesh_interactions
species_insertion_failure_threshold: 10000 # Threshold used during species insertion for
                                                 # triggering a re-insertion of all species
species_insertion_reattempt_threshold: 10 # Maximum number of attempts to reinsert all
                                                 # species. May need to set higher for high
                                                 # densities with randomized insertion.
uniform_crystal: false       # Insert species onto uniform crystal lattice.
n_steps_equil: 0              # Used for analysis. Waits for system to equilibriate for
                                     # n_steps_equil steps before beginning analyses.        
n_steps_target: 100000        # Used for adiabatically varying parameters, parameters will
                                     # reach their target parameter in n_steps_target steps.
static_particle_number: false # Tells interaction engine that particle number will never
                                      # change, circumventing certain book-keeping functions.
checkpoint_from_spec: false  # Generate a checkpoint file from an existing spec file.
potential: wca             # Specifies interaction potential between all particles.
soft_potential_mag: 10     # Energy scaling parameter for GEM-8 potential.
soft_potential_mag_target: -1 # If >= 0, rescales GEM-8 energy to meet target in 
                                        # n_steps_target steps.
like_like_interactions: true # If false, particles of the same species do not interact.
auto_graph: false            # If > 0 and graph_flag > 0, graphics window does not wait
                                     # for user to hit ESC before running. Useful for movies.
local_order_analysis: false  # Flag for post-process analysis of local order parameters in
                                     # 2D. Measures average order parameters as a function of r,
                                     # distance. Returns 2D heat map of order parameter magnitude.
local_order_width: 50      # Maximum distance r when calculating local order parameter.
local_order_bin_width: 0.5 # Mesh size to use when binning order parameter heat map.
local_order_n_analysis: 100   # Frequency of calculating order parameter values.
density_analysis: 0           # Calculates structure factors from FT of density.
density_bin_width: 0.1     # Mesh size to use when binning structure factor.
density_com_only: false      # Only use center of mass of objects for structure factor.
overlap_analysis: false      # Post-process analysis counting number of object overlaps.
highlight_overlaps: false    # Highlights objects that are overlapping in post-process
                                     # graphics.
reduced: false               # Internal parameter used to track reductions.
reload_reduce_switch: false  # If a reduction is performed before a reload, this parameter
                                     # tells C-GLASS to look for the proper file name, e.g.
                                     # run_name_reduced_xx_reload_yy_params.yaml instead of
                                     # run_name_reload_yy_reduced_xx_params.yaml.
checkpoint_flag: false       # Generate a checkpoint file every n_checkpoint steps that 
                                     # allows users to resume previous simulations. Contains 
                                     # most recent instance of RNG state and spec file data.
n_checkpoint: 10000           # Frequency used for generating checkpoint file information.
knockout_xlink: false        # Use knockout algorithm to limit occupancy of crosslinks
no_midstep: true            # Specify the simulation is not using a mid step algorithm

species:                             # Shared parameters used for all species.
  name: species            # Label given to species (e.g. microtubule, kinesin, etc)
  num: 0                      # Number of members of a species at initialization.
  diameter: 1              # Diameter of species, for point-like objects and greater
  length: 0                # Length of species, for line-like objects and greater
  insertion_type: random   # Insertion method for initializing members of a species:
                                     # Must be defined in the virtual Init() function for species
                                     # members to be effective. All objects have a random 
                                     # insertion method and custom insertion method.
  insert_file: none        # When using insertion_type of custom, this file specifies
                                     # the position and orientation of each member of the species.
  overlap: false             # If > 0, allow species members to overlap at initialization.
  draw_type: orientation   # Method used for coloring members when using graphics. Can
                                     # be one of orientation, fixed, or bw. When bw, objects will
                                     # be the opposite color of the graph_background color.
  color: 0                 # Color of objects when using graphics. Corresponds to a
                                     # color wheel that ranges from 0 to 2*Pi, corresponding to 
                                     # the colors used for object orientations.
  posit_flag: false          # Generate posit output file with information of object 
                                     # positions and orientations every n_posit steps.
  spec_flag: false           # Generate detailed output file unique for every species that
                                     # can completely reconstruct member information with a
                                     # frequency of n_spec steps.
  n_posit: 100                # Frequency used for generating posit file information.
  n_spec: 100                 # Frequency used for generating spec file information.
  stationary_flag: false     # If true, members will not move regardless of forces on them.

rigid_filament:
  max_length: 500          # maximum filament length. also used for dynamic instability.
  min_length: 5            # minimum filament length. also used for dynamic instability.
  constrain_motion_flag: false # If true, rigid filaments will move in planes such that two filaments
                                       # will never physically overlap if they do not begin overlapping.
                                       # This only works for two filaments. Warning will be thrown otherwise.
  packing_fraction: -1    # if num > 0, and packing fraction > 0, filaments are inserted
  #                                  # until the ratio filament to system volumes match this value.
  n_equil: 0                 # internal filament parameter used for shuffling.

filament:                            # Parameters unique to filament class of objects.
  - name: spindle
    packing_fraction: -1    # if num > 0, and packing fraction > 0, filaments are inserted
    persistence_length: 4000  # persistence length of filament.
                                    # until the ratio filament to system volumes match this value.
    perlen_ratio: -1        # if perlen ratio >= 0, sets the persistence length of filaments
                                    # such that the persistence length to length ratio is this value.
    polydispersity_flag: false # if > 0, assign length from exponential distribution
    max_length: 500          # maximum filament length. also used for dynamic instability.
    min_length: 2            # minimum filament length. also used for dynamic instability.
    length: 2     # minimum bond length. when using dynamic instability, the
    min_bond_length: 2     # minimum bond length. when using dynamic instability, the
                                     # number of bonds used to discretize filament may change while
                                     # filament is growing or shrinking to stay in range.
    driving_factor: 0        # force density used to propel active filaments.
    n_equil: 0          # internal filament parameter used for equilibriating before driving
    nematic_driving: false     # oscillate driving in a nematic fashion
    nematic_driving_freq: 0  # Frequency to use for driving oscillations
    peclet_number: -1        # ratio of active transport to diffusive transport. changes
                                     # driving factor if positive.
    flexure_number: -1       # considers perlen ratio and length to determine activity
    radius_of_curvature: -1 # used to specify intrinsic curvature, optional
    intrinsic_curvature: 0  # curvature per unit length to apply on filament. defines the
                                    # curvature of zero bending energy. positive is right-handed.
    intrinsic_curvature_sig: 0 # std_dev of intrinsic curvature from normal dist
    randomize_intrinsic_curvature_handedness: false # randomize handedness of curvature for each fil
    intrinsic_curvature_min: 0 # will apply if magnitude of intrinsic curvature is below
    highlight_handedness: false  # color filament by intrinsic curvature handedness
    highlight_curvature: false  # Applies color to filament bonds that are bent away from ic
    draw_center_of_curvature: false # Draw a dot at the filament center of curvature

    error_analysis: false     # output a file logging steps between renormalizations
                                    # during normal simulation operation
    theta_analysis: false     # run post-process analysis of filament conformation for testing
                                    # persistence length. outputs histogram of angle distributions
                                    # between neighboring bonds to compare to theory.
    lp_analysis: false        # test persistence length by measuring mean-square end-to-end
                                    # distance of filament in post-process analysis. outputs mse2e
                                    # file that measures mean-square end-to-end distance and variance.
    global_order_analysis: false # post-process analysis of global order parameters, such as global
                                       # polar order, global nematic order, global spiral number, etc.
    polar_order_analysis: false  # Flag for post-process analysis of polar order parameter.
                                       # Used for quantifying flocking-like behavior of objects.
    polar_order_n_bins: 100       # Bin size to use for polar order parameter histogram.
    polar_order_contact_cutoff: 3 # Sets x-axis scale of polar order parameter histogram,
                                          # and ranges from contact number of 0 to the cutoff.
    polar_order_width: 10  # Minimum cell size to use for polar order analysis
    msd_analysis: false # Output avg positions, orientations of filaments for msd analysis
    curvature_cluster_analysis: false # center of radius clustering for curved filaments
    cluster_lifetime_min: 100   # Min iterations cluster must persist before recording output
    cluster_by_handedness: false # Don't cluster filaments with diff. handedness
    spiral_init_flag: false    # initializes filaments in an archimedean spiral centered at
                                     # system origin.
    spiral_analysis: false  # runs analysis on spiral filaments in analysis mode
    spiral_number_fail_condition: 0 # when spiral_init_flag is on, terminates simulation 
                                            # when spiral number of a filament is < value.

    orientation_corr_analysis: false # post-process analysis of orientation correlation function.
    orientation_corr_n_steps: 1000 # number of steps to measure orientation correlation, defines
                                        # interval over which to average.
    crossing_analysis: false  # apply post-process analysis of filament crossing events.
    flocking_analysis: false  # post-process analysis of measuring flocking filaments.
                                    # generates output file giving number of flocking filaments as
                                    # well as number of exterior and interior flocking filaments.
    flock_polar_min: 0.5       # Polar order cutoff used for determining whether an object 
                                       # is in a flocking state.
    flock_contact_min: 0.5     # Contact number cutoff used for flocking determination.
    highlight_flock: false       # Flag that adds highlighting to high polar order objects
                                       # in post-process graphics and movies.
    flock_color_int: 1.57      # Color of flocking objects at the flock interior. Uses same
                                       # color scheme as that of color in species parameters.
    flock_color_ext: 4.71      # Color of flocking objects at the flock exterior.

    number_fluctuation_analysis: false
    number_fluctuation_boxes: 6
    number_fluctuation_centers: 10
    in_out_analysis: false    # Post-process analysis of incoming vs outgoing angle of 
                                    # colliding filaments.

    drive_from_bond_center: true # if true, driving forces are centered on bonds, and propulsion 
                                    # forces are directed along bond orientation. otherwise, driving forces
                                    # are centered on sites and forces are directed tangent to sites.

    flagella_flag: false      # applies a sinusoidal, time-varying intrinsic curvature along 
                                    # filament.
    flagella_freq: 1        # frequency at which to oscillate intrinsic curvature of flagella.
    flagella_period: 2      # period of sinusoid to apply along filament length.
    flagella_amplitude: 1   # defines amplitude of sinuosoid to apply along filament length.
    friction_ratio: 2        # ratio of filament friction, perpendicular / parallel.
    dynamic_instability_flag : true # flag for modeling dynamic instability of filaments. filaments
                                     # will polymerize at a rate of v_poly and depolymerize at a 
                                     # rate v_depoly, and switches between the two states 
                                     # stochastically with poisson frequencies dictated by 
                                     # f_shrink_to_grow, etc. will use a 3-state polymerization 
                                     # model if one of f_pause_to_shrink, etc frequencies are nonzero.
    force_induced_catastrophe_flag: false # induces a force-dependent depolymerization rate for
                                                 # forces applied to the filament tip.
    optical_trap_flag: false   # at initialization, the tail of every filament will be tethered
                                     # to its current position by a spring-like force.
    optical_trap_spring: 20  # spring constant used for optical trap forces.
    optical_trap_fixed: false  # if 0, optical trap lets filaments swing freely. if 1, filament
                                     # orientations are fixed by applying a second optical trap at the
                                     # head of the tail bond.
    cilia_trap_flag: false     # if this and optical trap flag are activated, filaments oriented
                                     # along positive dimension axes will have their tails fixed in
                                     # optical traps, and those oriented along negative axes will have
                                     # their heads fixed in optical traps.
    fic_factor: 0.01        # constant used in exponential term of force-induced catastrophe.
    f_shrink_to_grow : 1 # frequencies for polymerization rate switching when using 
    f_shrink_to_pause : 0  # dynamic instability.
    f_pause_to_grow : 1
    f_pause_to_shrink : 0
    f_grow_to_pause : 0
    f_grow_to_shrink : 0
    v_poly : 20           # speed of filament lengthening when filament is in grow state.
    v_depoly : 20        # speed of shortening when filament is in shrink state.
    custom_set_tail: false    # If custom set tail is true then the locations provided in the insert file
                                    # are the locations of the tails instead of the centers 
    reference_frame_flag: false # rotate filament into filament reference frame for bending
                                      # analysis and visualization

br_bead:
  driving_factor: 0
  driving_torque: 0
  density: -1
  chiral_handedness: 0
  rotational_noise: 1
  translational_noise: 1
  randomize_handedness: false
  highlight_handedness: false
  alignment_interaction: false
  alignment_torque: 0
  packing_fraction: -1
  draw_shape: sphere
spherocylinder:
  diffusion_analysis: false
  n_diffusion_samples: 1
spindle:
  - name: species
    num: 1
    length: 10
    diameter: 10
    n_filaments_bud: 1
    n_filaments_mother: 0
    alignment_potential: false
    k_spring: 1000
    k_align: 0
    spring_length: 0
    spb_diameter: 5
    nuc_site_insertion: centered_oriented # Insertion type for nucleation site. random or centered_orientated

crosslink:                          # Parameters specific to crosslinks.
  # crosslink insertion type can be the following:
  # fixed_grid: place static crosslinkers arranged on a 2D lattice with equal spacing
  # fixed_boundary: place static crosslinkers on boundary perimeter/surface with fixed spacing
  # random_grid: place static crosslinkers randomly on a 2D plane
  # random_boundary: place static crosslinkers randomly on boundary perimeter/surface
  # centered: a single crosslinker fixed at the origin, for testing purposes
  concentration: 0        # Concentration of crosslinkers at simulation initialization.
                                    # Units in #/area or #/vol in 2D or 3D for free xlinks. In
                                    # #/area for grid spacing. In #/length or #/area for 2D or 3D
                                    # boundaries.
  begin_with_bound_crosslinks: 0   # if greater than 0 the simultion begins with the specified number
                                    # of crosslinkers singly attached to microtubules
  use_binding_volume: true  # Calculate concentration of unbound head of 
                                    # singly bound protein by finding a binding 
                                    # volume in which it is statistically likely
                                    # to exist.
  infinite_reservoir_flag: false # Do crosslinks bind from an infinite
                                         # reservoir when going from unbound to
                                         # singly bound.  Only applicable for
                                         # crosslinks in solution.
  bind_site_density: 1 # The binding site density of an object that crosslinker
                                         # ends bind to 
  static_flag: false        # Flag for setting one crosslinker head to be fixed in space
  diffusion_s: 0          # Diffusion coefficient for singly bound crosslinks
  diffusion_d: 0          # Diffusion coefficient for doubly bound crosslinks
  energy_dep_factor: 0    # Scalar in exponential force-dependent off-rate of doubly-
                                    # bound crosslinks when under a load.
  force_dep_length: 0     # Characteristic length (x_c) used in 
                                    # force-dependent off-rate of doubly-bound 
                                    # crosslinks when under a load. 
                                    # (x_c > 0 = slip bond, x_c < 0 = catch bond)
  polar_affinity: 1       # Ratio of (probability of binding for antiparallel)/(probability 
                                    # of binding parallel)  
  k_spring: 10            # Spring constant of doubly-bound crosslinks.
  k_spring_compress: -1.  # Spring constant for compression. 
                                    # If negative just use k_spring instead.
  f_stall: 100            # Tether forces above f_stall cause bound
                                    # crosslink heads to cease walking.
  force_dep_vel_flag: true  # Flag that causes walking crosslink heads 
                                    # to have force-dependent velocity.
  k_align: 0              # Torsion spring constant for alignment of crosslink.
  rest_length: 0          # Spring rest length of crosslink tether.
  step_direction: 0          # Sets walker direction. If negative, walks toward filament
                                    # tail. If positive, walks toward filament head.
  tether_draw_type: orientation # Method of coloring crosslink tethers using graphics.
  tether_diameter: 0.5    # Diameter used for graphically representing crosslink tethers.
  tether_color: 3.1416    # Color for graphically representing crosslink tethers.
  minus_end_pausing: false  # If false, diffusing or walking crosslinks that move off the
                                    # filament automatically unbind. If true, crosslinks that try to
                                    # do so will remain at the filament tip until unbinding.
  plus_end_pausing: false   # If false, diffusing or walking crosslinks that move off the
                                    # filament automatically unbind. If true, crosslinks that try to
                                    # do so will remain at the filament tip until unbinding.
  r_capture: 5            # Max range allowed for singly to doubly bound crosslink.
                                    # Calculated using k_spring, rest_length. User input ignored.
  lut_grid_num: 256          # Number of grid points used in one dimension of the the lookup table (LUT).
                                    # Total entries go as the square of this number e.g. 256 x 256
  anchors:
    - velocity_s: 0           # Bound crosslink head velocities when walkers are singly bound.
      velocity_d: 0           # Bound crosslink head velocities when walkers are doubly bound.
      color: 0                # Anchor color
      bind_file: none         # File of species crosslink can bind to, and binding rates. If none, bind to
      k_on_s: 10              # On-rate for binding crosslinks from solution to bonds.
      k_off_s: 2              # Off-rate for bound crosslinks to go from bound to solution.
      k_on_d: 10              # On-rate for singly bound to doubly bound crosslinks.
      k_off_d: 2              # Off-rate for doubly bound to singly bound crosslinks.                                  # all and use given xlink parameters.

receptor:
  component: cortex       # The mesh object that holds receptor sites
  concentration: -1       # Number of receptors per unit area (3D) or length (2D) of component
  induce_catastrophe: false # Induce catastrophe when xlinked to filament
